%import common.CNAME
%import common.LETTER
%import common.DIGIT
%import common.ESCAPED_STRING -> ESCAPED_STRING_DOUBLE_QUOTES
%import common._STRING_ESC_INNER
%import common.SIGNED_FLOAT
%import common.SIGNED_INT
%import common.WS
%ignore WS

PREFIX: "="
FUNCTION_PREFIX: "+"
VARIABLE_PREFIX: "$"
SEP: ","
OPEN: "("
CLOSE: ")"
EQ_ARG: "="
EQ_ARG_FUNC: ":"

?start: command

command: PREFIX COMMAND arg*
arg: COMMAND_ARGUMENT EQ_ARG expr

TRUE: "true"
FALSE: "false"
NONE: "none"
COMMAND: CNAME
COMMAND_ARGUMENT: CNAME
FUNCTION: CNAME
FUNCTION_ARGUMENT: CNAME
VAR: CNAME
ESCAPED_STRING_SOLO_QUOTES: "'" _STRING_ESC_INNER "'"

?value: func_call
      | ESCAPED_STRING_SOLO_QUOTES
      | ESCAPED_STRING_DOUBLE_QUOTES
      | SIGNED_FLOAT
      | SIGNED_INT
      | TRUE
      | FALSE
      | NONE
      | var

?expr: value
     | expr "+" expr   -> add
     | expr "-" expr   -> sub
     | expr "*" expr   -> mul
     | expr "/" expr   -> div
     | expr "%" expr   -> mod
     | expr "**" expr  -> pow
     | expr "==" expr  -> eq
     | expr "!=" expr  -> not_eq
     | expr "<" expr   -> less_than
     | expr "<=" expr  -> less_than_or_eq
     | expr ">" expr   -> greater_than
     | expr ">=" expr  -> greater_than_or_eq
     | expr "and" expr -> and_op
     | expr "or" expr  -> or_op
     | "not" expr -> not_op
     | expr "in" expr  -> in_op
     | expr "not in" expr -> not_in_op
     | expr "is" expr  -> is_op
     | expr "is not" expr -> is_not_op
     | expr "if" expr "else" expr -> if_else
     | expr "?" expr ":" expr -> ternary
     // | "log" "_" "{" expr "}" expr -> log       работает ультра херово, не рекомендую

var: VARIABLE_PREFIX VAR
func_call: FUNCTION_PREFIX FUNCTION OPEN [arg_list | kwarg_list] CLOSE
arg_list: expr (SEP expr)*
kwarg_list: FUNCTION_ARGUMENT EQ_ARG_FUNC expr (SEP FUNCTION_ARGUMENT EQ_ARG_FUNC expr)*
