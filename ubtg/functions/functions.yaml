abs:
  full_name: Absolute
  description: A built-in function abs in Python.
  eval_logic: abs

call:
  full_name: Call
  description: It just a function call.
  param_description:
    - name: function
      description: Function to call.
    - name: args
      description: Arguments for the function.
  eval_logic: "lambda _vars_, function, *args: function(*args)"

callKwargs:
  full_name: Call with kwargs
  description: It just a function call with kwargs.
  param_description:
    - name: function
      description: Function to call.
    - name: kwargs
      description: Keyword arguments for the function.
  eval_logic: "lambda _vars_, function, **kwargs: function(**kwargs)"

crossing_field:
    full_name: Crossing Field
    description: LiSA
    logic: functions/logic/crossing_field.py

dict:
  full_name: Dictionary
  description: A built-in function dict in Python.
  eval_logic: dict

eval:
  full_name: Eval
  description: A built-in function eval in Python.
  eval_logic: eval

exec:
  full_name: Exec
  description: A built-in function exec in Python.
  eval_logic: exec

fastgem:
  full_name: Fast Gemini
  description: Quickly and conveniently receiving text from Gemini AI.
  param_description:
    - name: prompt
      type: str | None
      default: None
      description: Prompt to send to Gemini AI.
    - name: system_prompt
      type: str | None
      default: None
      description: System prompt for Gemini AI.
    - name: media
      type: list[str] | None
      default: None
      description: Media path to send to Gemini AI.
    - name: model
      type: str
      default: gemini-2.0-flash
      description: Model to use for Gemini AI.
    - name: temperature
      type: float
      default: "1"
      description: Temperature for Gemini AI.
    - name: prompt_length
      type: int
      default: "50"
      description: Length of the prompt to show in the message.
  logic: functions/logic/fastgem.py

float:
  full_name: Float
  description: A built-in function float in Python.
  eval_logic: float

get:
  full_name: Get
  description: A function that retrieves a value from a dictionary by key.
  param_description:
    - name: dictionary
      type: dict
      description: Dictionary to get the value from.
    - name: key
      type: str
      description: Key to get the value for.
    - name: default
      type: Any | None
      default: None
      description: Default value to return if the key is not found.
  logic: functions/logic/get.py

getattr:
  full_name: Get Attribute
  description: A built-in function getattr in Python.
  eval_logic: getattr

github:
  full_name: GitHub
  description: A function that returns a link to the GitHub repository.
  eval_logic: "lambda *_: 'https://github.com/astatdeglebantiy/NewUBTelegram'"

hahameter:
  full_name: Hahameter
  description: Calculates a haha score for a given text using the hahameter library.
  param_description:
    - name: text
      type: str
      description: Text to analyze for haha.
  returns:
    type: float
    description: Haha score (0.0 -> 1.0).
  logic: functions/logic/_hahameter.py

int:
  full_name: Integer
  description: A built-in function int in Python.
  eval_logic: int

isinstance:
  full_name: Is Instance
  description: A built-in function isinstance in Python.
  eval_logic: isinstance

latex:
  full_name: LaTeX image generation
  description: A function that returns a LaTeX code for the given text.
  param_description:
    - name: text
      type: str
      description: Text to convert to LaTeX.
    - name: font_size
      type: int
      default: "30"
      description: Font size for the LaTeX code.
    - name: transparent
      type: bool
      default: "False"
      description: Whether to make the background transparent.
    - name: dpi
      type: int
      default: "300"
      description: DPI for the image.
    - name: output_path
      type: str
      default: "{config.TEMP_PATH}latex.png"
      description: Output path to the image.
  returns:
    type: str
    description: Path to the generated image.
  logic: functions/logic/latex.py

list:
  full_name: List
  description: A built-in function list in Python.
  eval_logic: list

log:
  full_name: Logarithm
  description: Calculates the logarithm of a number with a specified base.
  param_description:
    - name: x
      type: float
      description: The number to calculate the logarithm of.
    - name: base
      type: float
      default: "10"
      description: The base of the logarithm.
  returns:
    type: float
    description: The logarithm of the number x with the specified base.
  logic: functions/logic/log.py

loop:
  full_name: Loop
  description: A function that loops through a list and returns the results.
  param_description:
    - name: iterable
      type: list
      description: List to loop through.
    - name: function
      type: callable
      description: Function to apply to each item in the list.
  returns:
    type: list
    description: List of results after applying the function to each item.
  eval_logic: "lambda _vars_, iterable, function: [function(item) for item in iterable]"

nya:
  full_name: Nya
  description: A function that returns path to a random anime image.
  logic: functions/logic/safebooru.py

pashalka:
  full_name: Pashalka
  description: Bo.
  eval_logic: "lambda *_: 'LJEDMITRII CUÐ©ECTBUET'"

repr:
  full_name: Representation
  description: A built-in function repr in Python.
  eval_logic: repr

request:
  full_name: Request
  description: A function that makes a request to the specified URL.
  param_description:
    - name: url
      type: str
      description: URL to request.
    - name: method
      type: str
      default: "GET"
      description: HTTP method (GET, POST, etc.).
    - name: headers
      type: dict | None
      default: None
      description: Optional headers for the request.
    - name: data
      type: dict | None
      default: None
      description: Optional data for POST requests.
    - name: json
      type: dict | None
      default: None
      description: Optional JSON data for POST requests.
  returns:
    type: dict
    description: Response object containing status code, headers, content, etc.
  logic: functions/logic/request.py

round:
  full_name: Round
  description: A built-in function round in Python.
  eval_logic: round

setvar:
  full_name: Set Variable
  description: Sets a variable in the context.
  param_description:
    - name: name
      type: str
      description: Name of the variable to set.
    - name: value
      type: Any
      description: Value to set for the variable.
  logic: functions/logic/setvar.py

shell:
  full_name: Shell Command
  description: Executes a shell command and returns the output.
  param_description:
    - name: command
      type: str
      description: Shell command to execute.
  returns:
    type: str
    description: Dictionary containing execution results.
  logic: functions/logic/shell.py

str:
  full_name: String
  description: A built-in function str in Python.
  eval_logic: str

sum:
  full_name: Sum
  description: A built-in function sum in Python.
  eval_logic: sum

uniform:
  full_name: Uniform
  description: Checks if all provided arguments are equal to the first argument.
  param_description:
    - name: args
      description: Arguments to check.
  eval_logic: "lambda _vars_, *args: all(arg == args[0] for arg in args)"

wttr:
  full_name: Weather
  description: A function that returns the weather for a specified city.
  param_description:
    - name: city
      type: str | None
      default: None
      description: City to get the weather for.
    - name: _format
      type: int
      default: "4"
      description: Format of the weather report (1-4).
  returns:
    type: str
    description: Weather report for the specified city.
  logic: functions/logic/wttr.py